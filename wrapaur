#!/usr/bin/bash

#A simple bash script pacman and cower wrapper
#Developer: William Hahn <whahn1983@gmail.com>

#set colors
blue='\e[1;34m'
white='\e[1;37m'
grey='\e[m'

#if .wrapaur folder does not exist, create it
cd $HOME/.wrapaur > /dev/null 2>&1
if [ $? -eq 1 ]; then
	mkdir $HOME/.wrapaur
	echo "wrapaur directory created at $HOME/.wrapaur"
fi

#update option selected
if [ "$1" == "-u" ]; then
	#run pacman update
	sudo pacman -Syu

	#run cower update for AUR and assign item names to downloads variable
	echo -e "${blue}:: ${white}Checking the AUR for updates...${grey}"
	downloads=$(cower -uddf -t $HOME/.wrapaur | cut -d ' ' -f 2)
	downloads=$(echo -e $downloads | tac -s " ")
	#check if updates were found and assigned to downloads variable
	if [[ -z $downloads ]]; then
		echo -e " ${grey}there is nothing to do"
	else
		#if downloads were found, echo download list and ask to install
		echo -e "${blue}:: ${white}Updates found...${grey}"
		for line in $downloads
		do
			echo -e $line
		done
		dprompt=$(echo -e "${blue}:: ${white}Proceed with installation? [Y/n] ${grey}")
		until [ "$dchoice" == "y" ] || [ "$dchoice" == "n" ] || [ "$dchoice" == "Y" ] || [ "$dchoice" == "N" ]; do
			read -p "$dprompt" dchoice
		done	
		#if chosen to install now, loop through each item in downloads variable, install and run pacman -U, then remove folder
		if [ "$dchoice" == "y" ] || [ "$dchoice" == "Y" ]; then
			for line in $downloads
			do
				cd $HOME/.wrapaur/$line
				echo -e "installing  ${line}..."
				eprompt=$(echo -e "${blue}:: ${white}Edit PKGBUILD? [Y/n] ${grey}")
				until [ "$echoice" == "y" ] || [ "$echoice" == "n" ] || [ "$echoice" == "Y" ] || [ "$echoice" == "N" ]; do
					read -p "$eprompt" echoice
				done	
				#if chosen to edit PKGBUILD open editor
				if [ "$echoice" == "y" ] || [ "$echoice" == "Y" ]; then
					$EDITOR PKGBUILD
				fi
				makepkg -si
				cd $HOME/.wrapaur
				ruprompt=$(echo -e "${blue}:: ${white}Remove source folder? [Y/n] ${grey}")
				until [ "$ruchoice" == "y" ] || [ "$ruchoice" == "n" ] || [ "$ruchoice" == "Y" ] || [ "$ruchoice" == "N" ]; do
					read -p "$ruprompt" ruchoice
				done
				if [ "$ruchoice" == "y" ] || [ "$ruchoice" == "Y" ]; then
					rm -Rf $HOME/.wrapaur/$line
				fi
				echoice="x"
				ruchoice="x"
			done
		else
			echo -e " ${grey}updates downloaded to $HOME/.wrapaur"
		fi
	fi
#search option selected
elif [ "$1" == "-s" ]; then
	#search with pacman and cower
	pacman -Ss $2
	cower -sc $2
#official install option selected
elif [ "$1" == "-i" ]; then
	#install from pacman
	sudo pacman -S ${@:2}
#remove package using pacman
elif [ "$1" == "-r" ]; then
	#remove with pacman
	sudo pacman -Rsn ${@:2}
#aur install option selected
elif [ "$1" == "-a" ]; then
	#run cower download with dependencies, loop to install all downloaded packages
	ainstalls=$(cower -ddf -t $HOME/.wrapaur ${@:2} | cut -d ' ' -f 2)
	ainstalls=$(echo -e $ainstalls | tac -s " ")
	if [[ -z $ainstalls ]]; then
		echo -e " ${grey}there is nothing to do"
	else
		#if packages were found, echo install list and ask to install
		echo -e "${blue}:: ${white}Packages found...${grey}"
		for line in $ainstalls
		do
			echo -e $line
		done
		aprompt=$(echo -e "${blue}:: ${white}Proceed with installation? [Y/n] ${grey}")
		until [ "$ichoice" == "y" ] || [ "$ichoice" == "n" ] || [ "$ichoice" == "Y" ] || [ "$ichoice" == "N" ]; do
			read -p "$aprompt" ichoice
		done	
		#if chosen to install now, loop through each item in ainstalls variable, install and run pacman -U, then remove folder
		if [ "$ichoice" == "y" ] || [ "$ichoice" == "Y" ]; then
			for line in $ainstalls
			do
				cd $HOME/.wrapaur/$line
				echo -e "installing ${line}..."
				eprompt=$(echo -e "${blue}:: ${white}Edit PKGBUILD? [Y/n] ${grey}")
				until [ "$echoice" == "y" ] || [ "$echoice" == "n" ] || [ "$echoice" == "Y" ] || [ "$echoice" == "N" ]; do
					read -p "$eprompt" echoice
				done	
				#if chosen to edit PKGBUILD open editor
				if [ "$echoice" == "y" ] || [ "$echoice" == "Y" ]; then
					$EDITOR PKGBUILD
				fi			
				makepkg -si
				cd $HOME/.wrapaur
				raprompt=$(echo -e "${blue}:: ${white}Remove source folder? [Y/n] ${grey}")
				until [ "$rachoice" == "y" ] || [ "$rachoice" == "n" ] || [ "$rachoice" == "Y" ] || [ "$rachoice" == "N" ]; do
					read -p "$raprompt" rachoice
				done
				if [ "$rachoice" == "y" ] || [ "$rachoice" == "Y" ]; then			
					rm -Rf $HOME/.wrapaur/$line
				fi
				echoice="x"
				rachoice="x"
			done	
		else
			echo -e " ${grey}updates downloaded to $HOME/.wrapaur"
		fi
	fi
#clear cache option selected
elif [ "$1" == "-c" ]; then
	#clear pacman cache and optimize pacman database
	sudo pacman -Sc
	oprompt=$(echo -e "${blue}:: ${white}Optimize Pacman Database? [Y/n] ${grey}")
	until [ "$ochoice" == "y" ] || [ "$ochoice" == "n" ] || [ "$ochoice" == "Y" ] || [ "$ochoice" == "N" ]; do
		read -p "$oprompt" ochoice
	done
	if [ "$ochoice" == "y" ] || [ "$ochoice" == "Y" ]; then
		sudo pacman-optimize
	fi
	#empty source folders from .wrapaur folder
	cprompt=$(echo -e "${blue}:: ${white}Clear contents of .wrapaur folder? [Y/n] ${grey}")
	until [ "$cchoice" == "y" ] || [ "$cchoice" == "n" ] || [ "$cchoice" == "Y" ] || [ "$cchoice" == "N" ]; do
		read -p "$cprompt" cchoice
	done
	if [ "$cchoice" == "y" ] || [ "$cchoice" == "Y" ]; then			
		rm -Rf $HOME/.wrapaur/*
		echo -e "$HOME/.wrapaur contents cleared..."
	fi
else
	echo $'Usage: wrapaur [OPTION]... [PACKAGE]...\n  -a install from aur\n  -c clean pacman cache with pacman -Sc, optimize pacman database, and clear .wrapaur folder\n  -i install from official repositories\n  -r remove a package with pacman -Rsn (for other removal options use pacman)\n  -s search official repositories and aur\n  -u update official repositories and aur'
fi
